openapi: 3.0.0
info:
  title: "LudoAPI"
  version: "1.0.0"
  contact:
    name: Team MonstersINC
    email: contact@example.com
    url: https://example.com/
paths:
  /ludo:
    get:
      summary: Returns active games
      responses:
        200:
          description: Succesfull request
        404:
          description: Not found
    post:
     summary: Starts new game
     responses:
        200:
          description: "New game created. Game id: 2"

  /ludo/{gameId}:
    get:
      summary: Returns active game by gameId
      responses:
        200:
          description: Succesfull request
        404:
          description: Not found
    delete:
      summary: Deletes specific game
      responses:
        200:
          description: Succesfull request
        404:
          description: Not found

  /ludo/{gameId}/player:
    get:
      summary: Returns players in game
      responses:
        200:
          description: Succesfull request
        404:
          description: Not found
    post:
      summary: Adds new player  
      responses:
        200:
          description: OK  
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
            description: The Game ID
        - in: query
          name: name
          required: true
          schema:
            type: string
            description: Name of player to set
        - in: query
          name: color
          required: true
          schema:
            type: string
            enum:
              - red
              - green
              - blue
              - yellow
            description: color of player to set

  /ludo/{gameId}/player/{playerId}:
    get:
      summary: Return specific player
      responses:
        200:
          description: Succesfull request
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
            description: ID of specific game
        - in: path
          name: playerId
          required: true
          schema:
            type: integer
            description: ID of specific player

  /ludo/{gameId}/roll:
    get:
      summary: Rolls the die and return what number it gave.
      responses:
        200:
          description: OK
          content:
            text/json:
              schema:
                type: integer 
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
  /ludo/{gameId}/movepiece:
    put:
      summary: Moves the piece and return new position
      responses:
        200:
          description: OK
          content:
            text/json:
              schema:
                type: integer 
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
        - in: query
          name: playerid
          required: true
          schema:
            type: integer
          description: current playerid
        - in: query
          name: pieceID
          schema: 
            type: integer
          required: true
          description: the current moving piece
  /ludo/{gameId}/getwinner:
    get:
      summary: rturns the winner player
      responses:
        200:
          description: OK
          content:
              text/json:
                 schema:
                    type: object
                    properties:
                        PlayerID:
                          type: integer
                        Name:
                          type: string
                        PlayerColour:
                          type: string
                        Piece:
                          type: array
                          items: 
                            type: object
                            properties:
                                position:
                                  type: integer
                                state:
                                  type: string
                                pieceId:
                                  type: integer
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Teknikhogskola/Ludo/1.0.0