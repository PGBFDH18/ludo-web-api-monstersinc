openapi: 3.0.0
info:
  title: "LudoAPI"
  version: "1.0.0"
  contact:
    name: Team MonstersINC
    email: contact@example.com
    url: https://example.com/
paths:
  /api/ludo:
    get:
     summary: returns all active games on the server at the time of request
     responses:
        '200':
          description: OK  
          content:
            text/json:
              schema:
                type: array
                items:
                 type: object
                 properties:
                   id: 
                    type: integer
                   ludogame:
                      type: object
                      properties:
                       _players: 
                         type: array
                         items:
                           type: object
                           properties:
                             PlayerID:
                               type: integer
                             Name:
                                type: string
                             PlayerColour:
                                type: string  
                                enum: [red, green, blue, yellow]
                             Piece:
                                type: array
                                items: 
                                    type: object
                                    properties:
                                       position:
                                         type: integer
                                       state:
                                         type: string
                                       pieceId:
                                         type: integer 
                       _gamestate:
                          type: string
                          enum: [ Started, NotStarted, Ended]
                       currentPlayerId:
                          type: integer
                       _diece:
                          type: object
    post:
     summary: Starts new game
     responses:
        '200':
          description: OK  
  /api/ludo/{gameId}:
    get:
     summary: return active Game by ID
     responses:
        '200':
          description: OK
          content:
             text/json:
               schema:
                 type: object
                 properties:
                       _players: 
                         type: array
                         items:
                           type: object
                           properties:
                             PlayerID:
                               type: integer
                             Name:
                                type: string
                             PlayerColour:
                                type: string  
                                enum: [red, green, blue, yellow]
                             Piece:
                                type: array
                                items: 
                                    type: object
                                    properties:
                                       position:
                                         type: integer
                                       state:
                                         type: string
                                       pieceId:
                                         type: integer 
                       _gamestate:
                          type: string
                          enum: [ Started, NotStarted, Ended]
                       currentPlayerId:
                          type: integer
                       _diece:
                          type: object
     parameters:
       - in: path
         name: gameId 
         required: true
         schema:
          type: integer
          description: The Game ID
    delete:
     summary: delete active game by id
     responses:
        '200':
          description: OK
     parameters:
       - in: path
         name: gameId 
         required: true
         schema:
          type: integer
          description: The Game ID
  /api/ludo/{gameId}/addplayer:
    post:
      summary: Adds new player  
      responses:
        '200':
          description: OK  
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
        - in: query
          name: playername
          schema:
            type: string
          required: true
          description: Name of player to set
        - in: query
          name: playercolor
          schema:
            type: string
            enum: [red, green blue, yellow]
          required: true
          description: color of player to set
  /api/{gameId}/players:
     get:
      summary: returns all players in an active game by  game ID
      responses:
        '200':
          description: OK
          content: 
            text/json:
              schema:
                 type: array
                 items:
                  type: object
                  properties:
                     PlayerID:
                        type: integer
                     Name:
                        type: string
                     PlayerColour:
                        type: string  
                        enum: [red, green, blue, yellow]
                     Piece:
                       type: array
                       items: 
                        type: object
                        properties:
                           position:
                             type: integer
                           state:
                             type: string
                           pieceId:
                             type: integer 
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
          description: The Game ID
  /api/{gameId}/player/{playerId}:
    get:
      summary: returns a player using an id
      responses:
        '200':
          description: OK
          content: 
            text/json:
              schema:
                 type: object
                 properties:
                     PlayerID:
                        type: integer
                     Name:
                        type: string
                     PlayerColour:
                        type: string  
                        enum: [red, green, blue, yellow]
                     Piece:
                       type: array
                       items: 
                        type: object
                        properties:
                           position:
                             type: integer
                           state:
                             type: string
                           pieceId:
                             type: integer 
      parameters:
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
          description: The Game ID
        - in: path
          name: playerId
          required: true
          schema:
            type: integer
          description: The Palyer ID
  /api/ludo/{gameId}/roll:
    get:
      summary: Rolls the die and return what number it gave.
      responses:
        '200':
          description: OK
          content:
            text/json:
              schema:
                type: integer 
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
  /api/ludo/{gameId}/movepiece:
    get:
      summary: Moves the piece
      responses:
        '200':
          description: OK
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
        - in: query
          name: player
          required: true
          schema:
             type: object
             properties:
                 PlayerID:
                    type: integer
                 Name:
                    type: string
                 PlayerColour:
                    type: string  
                    enum: [red, green, blue, yellow]
                 Piece:
                    type: array
                    items: 
                        type: object
                        properties:
                           position:
                             type: integer
                           state:
                             type: string
                           pieceId:
                             type: integer
          description: current player
        - in: query
          name: pieceID
          schema: 
            type: integer
          required: true
          description: the piece to move after dice roll 
        - in: query
          name: steps
          schema: 
            type: integer
          required: true
          description: resulf of dice roll
  /api/ludo/{gameId}/getwinner:
    get:
      summary: rturns the winner player
      responses:
        '200':
          description: OK
          content:
              text/json:
                 schema:
                    type: object
                    properties:
                        PlayerID:
                          type: integer
                        Name:
                          type: string
                        PlayerColour:
                          type: string 
                          enum: [red, green, blue, yellow]
                        Piece:
                          type: array
                          items: 
                            type: object
                            properties:
                                position:
                                  type: integer
                                state:
                                  type: string
                                pieceId:
                                  type: integer
      parameters:
        - in: path
          name: gameId 
          required: true
          schema:
            type: integer
          description: The Game ID
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Teknikhogskola/Ludo/1.0.0